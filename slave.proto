syntax = "proto2";

enum Commands {
	CMD_NOP 						= 0x00;
	CMD_ERR 						= 0x01;
	CMD_ECHO 						= 0x02;
	CMD_INFO 						= 0x03; /// Информация об устройстве
	CMD_BOOT						= 0x04;	/// Запуск загрузчика для прошивки.

	CMD_PORTS_IDR					= 0x06;	/// Считывание состояния PORTA и PORTB
	CMD_PORTS_ODRR					= 0x07;	/// Считать значение выходов PORTA и PORTB
	CMD_PORTS_ODRW					= 0x08; /// Записать значение на выход PORTA и PORTB
	CMD_PORTS_SET					= 0x09; /// Установить биты PORTA и PORTB
	CMD_PORTS_RESET 				= 0x0A;	/// Сбросить биты PORTA и PORTB

	CMD_WIEGAND						= 0x0B;	/// Считывание Wiegand

	CMD_RELAYS_IDR					= 0x0C;	/// Дискретные входы
	CMD_RELAYS_ODRR					= 0x0D; /// Считывание текущего состояния выходных реле
	CMD_RELAYS_ODRW					= 0x0E;	/// Запись данных в выходные реле
	CMD_RELAYS_SET					= 0x0F; /// Установить биты данных в выходных реле
	CMD_RELAYS_RESET				= 0x10; /// Сбросить биты данных выходных реле

	CMD_POWERS_IDR					= 0x11; /// Считать значение статуса
	CMD_POWERS_ODRR					= 0x12;	/// Считывание значения управляемых нагрузок
	CMD_POWERS_ODRW					= 0x13; /// Записать значение управляемых нагрузок
	CMD_POWERS_SET					= 0x14; /// Включить нагрузки
	CMD_POWERS_RESET				= 0x15;	/// Отключить нагрузки

	CMD_CLIMATE_GET					= 0x16; /// Информация о климатике
	CMD_CLIMATE_SET					= 0x17; /// Выбор режима, включение

	CMD_RS485_INFO					= 0x20; /// RS485 Информация

	CMD_READ_ALL					= 0x50; /// Прочитать всю информацию по входам

	CMD_PULSE						= 0x51; /// Выдать импульсный сигнал
	CMD_PORTS_TOGGLE				= 0x52;
	CMD_RELAYS_TOGGLE				= 0x53;
}


message Wieg {
	required uint32 size = 1;
	required bytes data = 2;
}


message ResponseAll {
	optional uint32 PORTA_IDR = 1;
	optional uint32 PORTB_IDR = 2;
	optional uint32 PORTA_ODR = 3;
	optional uint32 PORTB_ODR = 4;
	optional uint32 RELAYS_IDR = 5;
	optional uint32 RELAYS_ODR = 6;
	optional Wieg WiegandCh1 = 7;
	optional Wieg WiegandCh2 = 8;
}



enum PulseError {
	PE_DECODE_ERROR = 1;
	PE_NO_RESOURCES = 2;
	PE_PIN_BUSY = 3;
}


message Pulse {
	required uint32 pin = 1;  	// Номер вывода, 0-3 - PORTA, 4-7 - PORTB, 8-17 - Relays
	required uint32 width = 2;  // Длительность импульса
	optional uint32 delay = 3;  // Задержка переключения вывода
}
